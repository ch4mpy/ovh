#---------------#
# Configuration #
#---------------#
apiVersion: v1
kind: ConfigMap
metadata:
  name: quiz-config
  namespace: quiz
data:
  scheme: https
  hostname: quiz.c4-soft.com
  keycloak-host: https://oidc.c4-soft.com/auth
  reverse-proxy-uri: https://quiz.c4-soft.com
  quiz-api-internal-uri: http://quiz-api
  spring.datasource.url: jdbc:postgresql://quiz-db-postgresql:5432/quiz
  spring.security.oauth2.client.registration.quiz-admin.provider: keycloak
  spring.security.oauth2.client.registration.quiz-admin.client-id: quiz-admin
  spring.security.oauth2.client.registration.quiz-admin.authorization-grant-type: client_credentials
  spring.security.oauth2.client.registration.quiz-bff.provider: keycloak
  spring.security.oauth2.client.registration.quiz-bff.client-id: quiz-bff
  spring.security.oauth2.client.registration.quiz-bff.authorization-grant-type: authorization_code
  com.c4-soft.springaddons.oidc.client.oauth2-redirections.pre-authorization-code: FOUND
  logging.level.org.springframework.security: DEBUG
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jw-config
  namespace: quiz
data:
  scheme: https
  hostname: jw.c4-soft.com
  keycloak-host: https://oidc.c4-soft.com/auth
  reverse-proxy-uri: https://jw.c4-soft.com
  quiz-api-internal-uri: http://quiz-api
  spring.datasource.url: jdbc:postgresql://quiz-db-postgresql:5432/quiz
  spring.security.oauth2.client.registration.quiz-admin.provider: keycloak
  spring.security.oauth2.client.registration.quiz-admin.client-id: quiz-admin
  spring.security.oauth2.client.registration.quiz-admin.authorization-grant-type: client_credentials
  spring.security.oauth2.client.registration.quiz-bff.provider: keycloak
  spring.security.oauth2.client.registration.quiz-bff.client-id: quiz-bff
  spring.security.oauth2.client.registration.quiz-bff.authorization-grant-type: authorization_code
  com.c4-soft.springaddons.oidc.client.oauth2-redirections.pre-authorization-code: FOUND
---
#-----#
# API #
#-----#
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quiz-api
  name: quiz-api
  namespace: quiz
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: quiz-api
  strategy: {}
  template:
    metadata:
      labels:
        app: quiz-api
    spec:
      containers:
      - image: ch4mp/quiz-api
        name: quiz-api
        resources:
          requests:
            cpu: 250m
            memory: 250Mi
          limits:
            cpu: 750m
            memory: 750Mi
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 7084
          failureThreshold: 3
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 7084
          failureThreshold: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 20
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]
        volumeMounts:
        - name: config-volume
          readOnly: true
          mountPath: /workspace/config
        - name: secret-volume
          readOnly: true
          mountPath: /workspace/secret
      volumes:
      - name: config-volume
        configMap:
          name: quiz-config
      - name: secret-volume
        secret:
          secretName: quiz-secrets
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: quiz-api
  name: quiz-api
  namespace: quiz
spec:
  ports:
  - name: 80-7084
    port: 80
    protocol: TCP
    targetPort: 7084
  selector:
    app: quiz-api
  type: ClusterIP
status:
  loadBalancer: {}
---
#---------#
# Quiz UI #
#---------#
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quiz-ui
  name: quiz-ui
  namespace: quiz
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: quiz-ui
  strategy: {}
  template:
    metadata:
      labels:
        app: quiz-ui
    spec:
      containers:
      - image: ch4mp/quiz-ui
        name: quiz-ui
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 250m
            memory: 200Mi
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: quiz-ui
  name: quiz-ui
  namespace: quiz
spec:
  ports:
  - name: 80-80
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: quiz-ui
  type: ClusterIP
status:
  loadBalancer: {}
---
#-------#
# JW UI #
#-------#
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jw-ui
  name: jw-ui
  namespace: quiz
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: jw-ui
  strategy: {}
  template:
    metadata:
      labels:
        app: jw-ui
    spec:
      containers:
      - image: ch4mp/jw-ui
        name: jw-ui
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 250m
            memory: 200Mi
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jw-ui
  name: jw-ui
  namespace: quiz
spec:
  ports:
  - name: 80-80
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: jw-ui
  type: ClusterIP
status:
  loadBalancer: {}
---
#---------#
# Gateway #
#---------#
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quiz-bff
  name: quiz-bff
  namespace: quiz
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: bff
  strategy: {}
  template:
    metadata:
      labels:
        app: bff
    spec:
      containers:
      - image: ch4mp/quiz-bff
        imagePullPolicy: Always
        name: quiz-bff
        resources:
          requests:
            cpu: 100m
            memory: 250Mi
          limits:
            cpu: 750m
            memory: 750Mi
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 7080
          failureThreshold: 3
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 7080
          failureThreshold: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]
        volumeMounts:
        - name: config-volume
          readOnly: true
          mountPath: /workspace/config
        - name: secret-volume
          readOnly: true
          mountPath: /workspace/secret
      volumes:
      - name: config-volume
        configMap:
          name: quiz-config
      - name: secret-volume
        secret:
          secretName: quiz-secrets
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: quiz-bff
  name: quiz-bff
  namespace: quiz
spec:
  ports:
  - name: 7080-7080
    port: 7080
    protocol: TCP
    targetPort: 7080
  selector:
    app: quiz-bff
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jw-bff
  name: jw-bff
  namespace: quiz
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: jw-bff
  strategy: {}
  template:
    metadata:
      labels:
        app: jw-bff
    spec:
      containers:
      - image: ch4mp/quiz-bff
        imagePullPolicy: Always
        name: jw-bff
        resources:
          requests:
            cpu: 100m
            memory: 250Mi
          limits:
            cpu: 750m
            memory: 750Mi
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 7080
          failureThreshold: 3
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 7080
          failureThreshold: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]
        volumeMounts:
        - name: config-volume
          readOnly: true
          mountPath: /workspace/config
        - name: secret-volume
          readOnly: true
          mountPath: /workspace/secret
      volumes:
      - name: config-volume
        configMap:
          name: jw-config
      - name: secret-volume
        secret:
          secretName: quiz-secrets
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jw-bff
  name: jw-bff
  namespace: quiz
spec:
  ports:
  - name: 7080-7080
    port: 7080
    protocol: TCP
    targetPort: 7080
  selector:
    app: jw-bff
  type: ClusterIP
status:
  loadBalancer: {}
---
#-------------#
# .well-known #
#-------------#
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quiz-well-known
  name: quiz-well-known
  namespace: quiz
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: quiz-well-known
  strategy: {}
  template:
    metadata:
      labels:
        app: quiz-well-known
    spec:
      containers:
      - image: ch4mp/quiz-well-known
        name: quiz-well-known
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 200Mi
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: quiz-well-known
  name: quiz-well-known
  namespace: quiz
spec:
  ports:
  - name: 80-80
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: quiz-well-known
  type: ClusterIP
status:
  loadBalancer: {}
